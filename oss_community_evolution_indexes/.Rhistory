library("lme4")         # for the analysis
install lme4
install.packages()
library("lme4")         # for the analysis
library("lmerTest")     # to get p-value estimations
install.packages()
install.packages()
detach(""package:Matrix"", unload=TRUE)
detach("package:Matrix", unload=TRUE)
install.packages("Matrix")
install.packages("Matrix")
library("lme4")         # for the analysis
library("lmerTest")     # to get p-value estimations
library("performance")
install.packages("performance","car","dplyr")
library("lme4")         # for the analysis
library("lmerTest")     # to get p-value estimations
library("performance")
install.packages("performance")
install.packages("car")
library("dplyr")
install.packages("tidyverse")
install.packages("knitr")
install.packages("stringr")
install.packages("pscl")
install.packages("sjstats")
install.packages("emmeans")
install.packages("ggp lot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("magrittr")
install.packages("magrittr")
library("lme4")         # for the analysis
library("lmerTest")     # to get p-value estimations
library("performance")
library("car")
library("dplyr")
library("tidyverse")    # needed for data manipulation
library("knitr")
library("stringr")
library("pscl")
library("sjstats")
library("emmeans")      # for interaction analysis
library("ggplot2")
library("magrittr")
## preparing data
table_data<-read.table("../result/2022-03-15T15-26-10Z_interval_7_days_x_12/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
## preparing data
table_data<-read.table("../result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
## preparing data
table_data<-read.table("C:\phd-one\project\20240103-tosem-response\oss_community_evolution_indexes\result\2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果\index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
## preparing data
table_data<-read.table("C:/phd-one/project/20240103-tosem-response/oss_community_evolution_indexes/result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
setwd("C://phd-one//project//20240103-tosem-response//oss_community_evolution_indexes")
## preparing data
table_data<-read.table("../result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
index_productivity <- read.csv("C:/phd-one/project/20240103-tosem-response/oss_community_evolution_indexes/result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv")
View(index_productivity)
View(index_productivity)
View(index_productivity)
## preparing data
table_data<-read.table("../result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
## preparing data
print(index_productivity)
table_data<-read.table("../result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
## preparing data
## table_data<-read.table("../result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
table_data<-index_productivity
print(table_data)
# perform log transformation, follow [1].
# [1] Zhixing Li, Yue Yu, Minghui Zhou, Tao Wang, Gang Yin, Long Lan, and HuaiminWang. 2020. Redundancy, context, and preference: An empirical study of dupli-cate pull requests in OSS projects.IEEE Transactions on Software Engineering(2020).
tmp_data <- table_data %>% mutate(
split = log(split+0.5),
shrink = log(shrink+0.5),
merge = log(merge+0.5),
expand = log(expand+0.5),
commit_count = log(commit_count+0.5),
)
verify_lmer <- function(c_model) {
print(vif(c_model)) # check for colinearty, values below 5 are recommended
print(check_normality(c_model)) # check normality of the residuals
print(check_heteroscedasticity(c_model)) # check heteroscedasticity of the residuals
print(summary(c_model))
print(model_performance(c_model))
print(performance_accuracy(c_model))
print(performance::icc(c_model))
print(anova(c_model))
print(ranova(c_model))
plot(fitted(c_model), resid(c_model, type = "pearson"))
abline(0, 0, col = "red")
qqnorm(resid(c_model),cex=.3)
qqline(resid(c_model), col = "red")
}
c_model_1 <- lmer(formula = commit_count ~ split + shrink + merge + expand + (1 | project_name), data = tmp_data)
verify_lmer(c_model_1)
## preparing data
## table_data<-read.table("../result/2022-05-12T00-27-25Z_interval_7_days_x_12_论文标准结果/index_productivity.csv",head=T,sep=',',stringsAsFactors = FALSE )
table_data<-index_productivity
print(table_data)
# perform log transformation, follow [1].
# [1] Zhixing Li, Yue Yu, Minghui Zhou, Tao Wang, Gang Yin, Long Lan, and HuaiminWang. 2020. Redundancy, context, and preference: An empirical study of dupli-cate pull requests in OSS projects.IEEE Transactions on Software Engineering(2020).
tmp_data <- table_data %>% mutate(
split = scale(log(split+0.5)),
shrink = scale(log(shrink+0.5)),
merge = scale(log(merge+0.5)),
expand = scale(log(expand+0.5)),
commit_count = scale(log(commit_count+0.5)),
)
verify_lmer <- function(c_model) {
print(vif(c_model)) # check for colinearty, values below 5 are recommended
print(check_normality(c_model)) # check normality of the residuals
print(check_heteroscedasticity(c_model)) # check heteroscedasticity of the residuals
print(summary(c_model))
print(model_performance(c_model))
print(performance_accuracy(c_model))
print(performance::icc(c_model))
print(anova(c_model))
print(ranova(c_model))
plot(fitted(c_model), resid(c_model, type = "pearson"))
abline(0, 0, col = "red")
qqnorm(resid(c_model),cex=.3)
qqline(resid(c_model), col = "red")
}
